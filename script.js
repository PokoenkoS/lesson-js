// 
// // –ù–∞–ø–∏—à—ñ—Ç—å –∫–æ–¥, —è–∫–∏–π –∑–∞–ø–∏—Ç—É–≤–∞—Ç–∏–º–µ// –ª–æ–≥—ñ–Ω –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é prompt —ñ –±—É–¥–µ –≤–∏–≤–æ–¥–∏—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç//
//  –≤ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞// –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–≤–æ–¥–∏—Ç—å "admin",// —Ç–æ prompt –∑–∞–ø–∏—Ç—É—î –ø–∞—Ä–æ–ª—å.// 
//  –Ø–∫—â–æ –Ω—ñ—á–æ–≥–æ –Ω–µ –≤–≤–µ–ª–∏ –∞–±–æ –Ω–∞—Ç–∏—Å–Ω—É—Ç–∞ –∫–ª–∞–≤—ñ—à–∞ Esc// –≤–∏–≤–µ—Å—Ç–∏ —Ä—è–¥–æ–∫ "Cancel"//
//   –Ü–Ω–∞–∫—à–µ –≤–∏–≤–µ—Å—Ç–∏ —Ä—è–¥–æ–∫ "I don't know you"//–ü–∞—Ä–æ–ª—å –ø–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ —Ç–∞–∫:// 
//   –Ø–∫—â–æ –≤–≤–µ–¥–µ–Ω–æ –ø–∞—Ä–æ–ª—å "i am admin",// 
// —Ç–æ –≤–∏–≤–µ—Å—Ç–∏ —Ä—è–¥–æ–∫ "Hello!"// —ñ–Ω–∞–∫—à–µ –≤–∏–≤–æ–¥–∏—Ç–∏ —Ä—è–¥–æ–∫ "Wrong password!"





// if (login ==="admin") {
//     const password = prompt ("–≤–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å");
//     if (password ==="I am admin"){ 
//         console.log ("Hello");
//     }
// } else if (!login) {
// console.log ("Cansel");
// } else {
//     console.log ("I dont know you");
// };
// ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
// // –ù–∞–ø–∏—à—ñ—Ç—å —á–µ—Ä–µ–∑ —Å–≤—ñ—Ç—á –ø–æ—à—É–∫ –∞–≤—Ç–æ—Ä–∞ –º–æ–≤–∏ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è//
//  –ü–∏—à–µ–º–æ –Ω–∞–∑–≤—É –º–æ–≤–∏ —É —à–∞–±–ª–æ–Ω–Ω–æ–º—É —Ä—è–¥–∫—É –æ—Ç—Ä–∏–º—É—î –≤—ñ–¥–ø–æ–≤—ñ–¥—å: –º–æ–≤–∞ —Ç–∞ –∞–≤—Ç–æ—Ä// 
//  PHP –†–∞—Å–º—É—Å –õ–µ—Ä–¥–æ—Ä—Ñ
// C# –≥—Ä—É–ø–∞ —ñ–Ω–∂–µ–Ω–µ—Ä—ñ–≤ –∫–æ–º–ø–∞–Ω—ñ—ó Microsoft –ø—ñ–¥ –∫–µ—Ä—ñ–≤–Ω–∏—Ü—Ç–≤–æ–º
//   –ê–Ω–¥–µ—Ä—Å–∞ –•–µ–π–ª—Å–±–µ—Ä–≥–∞ —Ç–∞ –°–∫–æ—Ç—Ç–∞ –í—ñ–ª—å—Ç–∞—É–º–æ—Ç–∞
// Swift –ö—Ä—ñ—Å –õ–∞—Ç—Ç–Ω–µ—Ä//
//    JS –ë—Ä–µ–Ω–¥–∞–Ω –ï–π—Ö
// Java –î–∂–µ–π–º—Å –ì–æ—Å–ª—ñ–Ω–≥
// Python –ì–≤—ñ–¥–æ –≤–∞–Ω –†–æ—Å—Å—É–º
// const language = prompt ( "–í–≤–µ–¥—ñ—Ç—å –º–æ–≤—É –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è");


// switch (language?.toLocaleLowerCase()) {
//     case `php`: 
//     console.log (`PHP –†–∞—Å–º—É—Å –õ–µ—Ä–¥–æ—Ä—Ñ`);
//     break;

//     case `c#`:
//     console.log (`C# –≥—Ä—É–ø–∞ —ñ–Ω–∂–µ–Ω–µ—Ä—ñ–≤ –∫–æ–º–ø–∞–Ω—ñ—ó Microsoft –ø—ñ–¥ –∫–µ—Ä—ñ–≤–Ω–∏—Ü—Ç–≤–æ–º
//      –ê–Ω–¥–µ—Ä—Å–∞ –•–µ–π–ª—Å–±–µ—Ä–≥–∞ —Ç–∞ –°–∫–æ—Ç—Ç–∞ –í—ñ–ª—å—Ç–∞—É–º–æ—Ç–∞`);
//      break;

//     case `js`: 
//     console.log (`JS –ë—Ä–µ–Ω–¥–∞–Ω –ï–π—Ö`);
//     break;

//     case `java`: 
//     console.log (`Java –î–∂–µ–π–º—Å –ì–æ—Å–ª—ñ–Ω–≥`);;
//     break;

//     case `python`: 
//     console.log (`Python –ì–≤—ñ–¥–æ –≤–∞–Ω –†–æ—Å—Å—É–º`);
//     break;
// default: 
// console.log (`–Ü–Ω—à–∞ –º–æ–≤–∞`);
// }
// ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
// –ó–∞ –∫–æ–∂–µ–Ω –º—ñ—Å—è—Ü—å –ø–æ–¥–∞—Ç–∫–æ–≤–∞ –Ω–∞—Ä–∞—Ö–æ–≤—É—î –Ω–∞ –ó–ü —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞ 5% –≤—ñ–¥ —Å—É–º–∏.
// –ù–∞–ø–∏—à—ñ—Ç—å –∫–æ–Ω—Å–æ–ª—å–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é, –Ω–∞ —è–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–≤–æ–¥–∏—Ç—å —Å—É–º—É –∑–ø
// —ñ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –º—ñ—Å—è—Ü—ñ–≤ –∑ –¥–æ–ø–æ–º–æ–≥–æ—é prompt() –Ω–µ –∑–∞–±—É–≤–∞—î–º–æ, —â–æ –ø—Ä–æ–º–ø—Ç –ø–æ–≤–µ—Ä—Ç–∞—î —Ä—è–¥–æ–∫.
// –ê –ø–æ–¥–∞—Ç–∫–æ–≤–∞ –æ–±—á–∏—Å–ª—é—î –∫—ñ–Ω—Ü–µ–≤—É —Å—É–º—É –∑–ø –±–µ–∑ –ø–æ–¥–∞—Ç–∫—ñ–≤,
// –°—É–º—É –ø–æ–¥–∞—Ç–∫—ñ–≤ –≤—Å—å–æ–≥–æ —ñ —á–∏—Å—Ç–∏–π –¥–æ—Ö—ñ–¥ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞ –∑–∞ –∫–æ–∂–µ–Ω –º—ñ—Å—è—Ü—å.
// –î–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è —Å—É–º–∏ –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –≤—ñ–¥—Å–æ—Ç–∫—ñ–≤ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Ü–∏–∫–ª for.


// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é logItems(items), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç for—Ü–∏–∫–ª,
//  –∫–æ—Ç–æ—Ä—ã–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞ –≤—ã–≤–æ–¥–∏—Ç –Ω–∞ –∫–æ–Ω—Å–æ–ª—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ 
//  <item number> - <item value>. –ù—É–º–µ—Ä–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å 1.

// –ù–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞ ['Mango', 'Poly', 'Ajax']—Å –∏–Ω–¥–µ–∫—Å–æ–º 0 –±—É–¥–µ—Ç
//  –Ω–∞–ø–µ—á–∞—Ç–∞–Ω–æ, 1 - Mango–∞ –¥–ª—è –∏–Ω–¥–µ–∫—Å–∞ 2 –±—É–¥–µ—Ç –Ω–∞–ø–µ—á–∞—Ç–∞–Ω–æ 3 - Ajax.

// function logItems(items) {
//     for (let i=0; i < items.length; i++) {
       
//         console.log(`${i+1} - ${items[i]}`);
//     }
   
//   }

// logItems(['Mango', 'Poly', 'Ajax']);
// logItems(['üçé', 'üçá', 'üçë', 'üçå', 'üçã']);

// !||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

// –ù–∞–ø–∏—à—ñ—Ç—å –Ω–∞—Å—Ç—É–ø–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó:

// createProduct(obj, callback) - –ø—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç —Ç–æ–≤–∞—Ä—É –±–µ–∑ id, –∞ —Ç–∞–∫–æ–∂ –∫–æ–ª–ª–±–µ–∫.
//  –§—É–Ω–∫—Ü—ñ—è —Å—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç —Ç–æ–≤–∞—Ä—É, –¥–æ–¥–∞—é—á–∏ –π–æ–º—É —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —É –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å
//   id —Ç–∞ –≤–∏–∫–ª–∏–∫–∞—î –∫–æ–ª–ª–±–µ–∫ –ø–µ—Ä–µ–¥–∞—é—á–∏ –π–æ–º—É —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –æ–±'—î–∫—Ç.
// logProduct(product) - –∫–æ–ª–±–±–µ–∫ –ø—Ä–∏–π–º–∞—é—á–∏–π –æ–±'—î–∫—Ç –ø—Ä–æ–¥—É–∫—Ç—É —ñ –ª–æ–≥—É—é—á–∏–π –π–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å
// logTotalPrice(product) - –∫–æ–ª–±–±–µ–∫, —â–æ –ø—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç –ø—Ä–æ–¥—É–∫—Ç—É —ñ –ª–æ–≥—ñ—é—î –∑–∞–≥–∞–ª—å–Ω—É –≤–∞—Ä—Ç—ñ—Å—Ç—å
//  —Ç–æ–≤–∞—Ä—É –≤ –∫–æ–Ω—Å–æ–ª—å
// const map = [
//     { name: "alex",
//       rating: 57,
//       amount: 5,
//       price: 10,
//     },
//     { name: "ivan",
//     rating: 29,
//     amount: 5,
//     price: 10,
//   },
//     { name: "michl",
//     rating: 180,
//     amount: 5,
//     price: 10,
// }
// ]
// function createProduct(obj, callback) {
//     obj.id = 57;
//     callback(obj);
// }

// function newProduct (product) {
//     console.log(product);
// }; 

// function logTotalPrice(product) {
//     console.log(map[0].amount * map[0].price);
// };


// createProduct(map[2], newProduct);
// createProduct(map[2], logTotalPrice);
// ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

// –î–æ–¥–∞–π—Ç–µ –æ–±'—î–∫—Ç account –º–µ—Ç–æ–¥–∏ withdraw(amount, onSuccess, onError) —Ç–∞ deposit(amount, onSuccess, onError),
//  –¥–µ –ø–µ—Ä—à–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä —Ü–µ —Å—É–º–∞ –æ–ø–µ—Ä–∞—Ü—ñ—ó, –∞ –¥—Ä—É–≥–∏–π —Ç–∞ —Ç—Ä–µ—Ç—ñ–π - –∫–æ–ª–ª–±–µ–∫–∏.

// –ú–µ—Ç–æ–¥ withdraw –≤–∏–∫–ª–∏–∫–∞—î onError —è–∫—â–æ amount –±—ñ–ª—å—à–µ TRANSACTION_LIMIT –∞–±–æ this.balance,
//  —ñ onSuccess –≤ —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É.

// –ú–µ—Ç–æ–¥ deposit –≤–∏–∫–ª–∏–∫–∞—î onError —è–∫—â–æ amount –±—ñ–ª—å—à–µ TRANSACTION_LIMIT –∞–±–æ –º–µ–Ω—à–µ –∞–±–æ –¥–æ—Ä—ñ–≤–Ω—é—î
//  –Ω—É–ª—é, —ñ onSuccess –≤ —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É.
// const TRANSACTION_LIMIT = 5000;

// const account = {
//     user: `Alex`,
//     balance: 1000,
//     withdrow(amount, onSuccess, onError) {
//         if (amount > TRANSACTION_LIMIT) {
//            onError(`${amount} –ø–µ—Ä–µ–≤–∏—â–∏–ª–∞ –ª—ñ–º—ñ—Ç`);
//         } else if(amount > this.balance) {
//             onError(`${amount} –±—ñ–ª—å—à–∞ –∑–∞ –±–∞–ª–∞–Ω—Å`)
//         } else {
           
//             this.balance -= amount;
//             onSuccess(`–û–ø–µ—Ä–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞ –±–∞–ª–∞–Ω—Å: ${this.balance}`);
//         }
//     },

//     deposit(amount, onSuccess, onError) {
//         if (amount > TRANSACTION_LIMIT) {
//             onError(`${amount} –ø–µ—Ä–µ–≤–∏—â–∏–ª–∞ –ª—ñ–º—ñ—Ç`);
//          } else if(amount <= 0){
//              onError(`${amount} –±—ñ–ª—å—à–∞ –∑–∞ –±–∞–ª–∞–Ω—Å`);
//          } else {
//              this.balance += amount;
//              onSuccess(`–û–ø–µ—Ä–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞ –±–∞–ª–∞–Ω—Å: ${this.balance}`);
//          }
//     }
// }

// function letOnSucces(message){
//     console.log(`–£—Å–ø—ñ—à–Ω–æ ${message}`);
// };
// function letOnError(message){
//     console.log(`–ü–æ–º–∏–ª–∫–∞ ${message}`);
// };
// account.withdrow(100, letOnSucces, letOnError);
// account.withdrow(5000, letOnSucces, letOnError);
// account.withdrow(100, letOnSucces, letOnError);
// account.deposit(100, letOnSucces, letOnError);


// const sum=5;
// !///////////////////////////////////////////////////////////////////////
// const cars = [
//     {
//       make: "Honda",
//       modcar: "CR-V",
//       type: "suv",
//       amount: 14,
//       price: 24045,
//       onSale: true,
//     },
//     {
//       make: "Honda",
//       modcar: "Accord",
//       type: "sedan",
//       amount: 2,
//       price: 22455,
//       onSale: true,
//     },
//     {
//       make: "Mazda",
//       modcar: "Mazda 6",
//       type: "sedan",
//       amount: 8,
//       price: 24195,
//       onSale: false,
//     },
//     {
//       make: "Mazda",
//       modcar: "CX-9",
//       type: "suv",
//       amount: 7,
//       price: 31520,
//       onSale: true,
//     },
//     {
//       make: "Toyota",
//       modcar: "4Runner",
//       type: "suv",
//       amount: 19,
//       price: 34210,
//       onSale: false,
//     },
//     {
//       make: "Toyota",
//       modcar: "Sequoia",
//       type: "suv",
//       amount: 16,
//       price: 45560,
//       onSale: false,
//     },
//     {
//       make: "Toyota",
//       modcar: "Tacoma",
//       type: "truck",
//       amount: 4,
//       price: 24320,
//       onSale: true,
//     },
//     {
//       make: "Ford",
//       modcar: "F-150",
//       type: "truck",
//       amount: 11,
//       price: 27110,
//       onSale: true,
//     },
//     {
//       make: "Ford",
//       modcar: "Fusion",
//       type: "sedan",
//       amount: 13,
//       price: 22120,
//       onSale: true,
//     },
//     {
//       make: "Ford",
//       modcar: "Explorer",
//       type: "suv",
//       amount: 10,
//       price: 31660,
//       onSale: false,
//     },
//   ];
//   –ù–µ—Ö–∞–π —Ñ—É–Ω–∫—Ü—ñ—è makeCarsWithDiscount –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤
//    —ñ–∑ –∑–º—ñ–Ω–Ω–∏–º –∑–Ω–∞—á–µ–Ω–Ω—è–º –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ price –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –ø–µ—Ä–µ–¥–∞–Ω–æ—ó –∑–Ω–∏–∂–∫–∏
// const makeCarsWithDiscount =(cars, discount ) =>
//     cars.map((car) => {
//         car.price -=car.price * discount;
//         return car; 

// });
// console.table(makeCarsWithDiscount(cars, 0.2));
// console.table(makeCarsWithDiscount(cars, 0.4));
// !|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

// –ù–µ—Ö–∞–π —Ñ—É–Ω–∫—Ü—ñ—è filterByPrice –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤ —Ü—ñ–Ω–∞ —è–∫–∏—Ö –º–µ–Ω—à–∞ –Ω—ñ–∂ –∑–Ω–∞—á–µ–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ threshold.

// const filterByPrice = (cars, threshold) => cars.filter(car => car.price<threshold)
// // return car;

// console.table(filterByPrice(cars, 30000));
// console.table(filterByPrice(cars, 25000));
// !||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

// –ù–µ—Ö–∞–π —Ñ—É–Ω–∫—Ü—ñ—è getCarsWithDiscount –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å onSale —è–∫–∏—Ö true.

// const getCarsWithDiscount = (cars) => cars.filter((car) => car.onSale === true);

// console.table(getCarsWithDiscount(cars));
// !||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
// –ù–µ—Ö–∞–π —Ñ—É–Ω–∫—Ü—ñ—è getCarsWithType –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤ —Ç–∏–ø —è–∫–∏—Ö –∑–±—ñ–≥–∞—î—Ç—å—Å—è –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ type.

// const getCarsWithType = (cars, type) => cars.filter(car => car.type ===type);

// console.table(getCarsWithType(cars, 'suv'));
// console.table(getCarsWithType(cars, 'sedan'));

// –ù–µ—Ö–∞–π —Ñ—É–Ω–∫—Ü—ñ—è sortByAscendingAmount –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤ –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–∏–π –∑–∞ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è–º –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–æ—Å—Ç—ñ amount.

// const sortByAscendingAmount = cars => cars.sort((a, b)=>a.amount-b.amount);

// console.table(sortByAscendingAmount(cars));
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

// // –ù–∞–ø–∏—à—ñ—Ç—å –∫–æ–¥, —â–æ–± –≤–∏–¥–∞–ª–∏—Ç–∏ –≤—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –≤ –∑–∞–¥–∞–Ω–æ–º—É –º–∞—Å–∏–≤—ñ
// // –§—É–Ω–∫—Ü—ñ—è `deleteElement()` –≤–∏–¥–∞–ª—è—î –≤—Å—ñ –≤—Ö–æ–¥–∂–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ —ñ–∑ –∑–∞–¥–∞–Ω–æ–≥–æ –º–∞—Å–∏–≤—É.
// // 
// const num = [1, 2, 3, 5, 8, 10, 15, `Hello`];
//  function deleteElement(element) {
// const now = num.indexOf(element)
// console.log(now);
// num.splice(now, 1);


//  };
//  deleteElement(5);
// console.log(num);



// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// –ù–∞–ø–∏—à—ñ—Ç—å –º–µ—Ç–æ–¥, —è–∫–∏–π —Ä–æ–∑–±–∏–≤–∞—î –º–∞—Å–∏–≤ –Ω–∞ —á–∞—Å—Ç–∏–Ω–∏ –≤–∏–∑–Ω–∞—á–µ–Ω–æ–≥–æ —Ä–æ–∑–º—ñ—Ä—É

// const data = [1, 2, 3, 4, 5, 6, 7];


// const chunkArray = (arr, devider) => {
//   let index = 0;
// const newArray = [];
//   while (index < 0) {
// const chuk = arr.spise(index, devider+index)
//   }
//   return newArray;
// }
// console.log(chunkArray(data, 3)) // [[1, 2], [3, 4], [5, 6], [7]]
// console.log(chunkArray(data, 3)) // [[1, 2, 3], [4, 5, 6], [7]]


                                                                                                                                                             
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

// const customer ={
//     firstName: "Mark",
//     lastName: "Soper",
//     getFullName(){
//         return `${this.firstName} ${this.lastName}`;
//     },
//     };

//     function makeMessage(callback) {
//         console.log(`–û–±—Ä–æ–±–ª—è—î–º–æ –∑–∞—è–≤–∫—É –≤—ñ–¥ ${callback()}.`);
//     }

//     makeMessage(customer.getFullName.bind(customer));

// –ù–∞–ø–∏—à—ñ—Ç—å –º–µ—Ç–æ–¥ calcTotalPrice(stoneName), —è–∫–∏–π –ø—Ä–∏–π–º–∞—î –Ω–∞–∑–≤—É –∫–∞–º–µ–Ω—é —ñ —Ä–æ–∑—Ä–∞—Ö–æ–≤—É—î —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –∑–∞–≥–∞–ª—å–Ω—É –≤–∞—Ä—Ç—ñ—Å—Ç—å –∫–∞–º–µ–Ω—ñ–≤ –∑ —Ç–∞–∫–∏–º —ñ–º'—è–º, —Ü—ñ–Ω–æ—é —Ç–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—é –∑ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ stones.

// const chopShop = {
//   stones: [
//     { name: 'Emerald', price: 1300, quantity: 4 },
//     { name: 'Diamond', price: 2700, quantity: 3 },
//     { name: 'Sapphire', price: 1400, quantity: 7 },
//     { name: 'Ruby', price: 800, quantity: 2 },
//   ],
//   calcTotalPrice(stoneName) {
//     const total = this.stones.find((stone) => stone.name ===stoneName);
//     return total.price * total.quantity;
//   },
// };

// console.log(chopShop.calcTotalPrice('Emerald')); // 5200
// console.log(chopShop.calcTotalPrice('Diamond')); // 8100
// console.log(chopShop.calcTotalPrice('Sapphire')); // 9800
// console.log(chopShop.calcTotalPrice('Ruby')); // 1600

// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å courses–∫–æ–ª–ª–µ–∫—Ü–∏–µ–π –æ–±—É—á–∞—é—â–∏—Ö –∫—É—Ä—Å–æ–≤:

// addCourse(name)- –¥–æ–±–∞–≤–ª—è–µ—Ç –∫—É—Ä—Å –≤ –∫–æ–Ω–µ—Ü –∫–æ–ª–ª–µ–∫—Ü–∏–∏
// removeCourse(name)- —É–¥–∞–ª—è–µ—Ç –∫—É—Ä—Å –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
// updateCourse(oldName, newName)- –º–µ–Ω—è–µ—Ç –∏–º—è –Ω–∞ –Ω–æ–≤–æ–µ
// const courses = ['HTML', 'CSS', 'JavaScript', 'React', 'PostgreSQL'];

// addCourse('Express');
// console.log(courses); // ['HTML', 'CSS', 'JavaScript', 'React', 'PostgreSQL', 'Express']
// addCourse('CSS'); // ' You already have this course'

// removeCourse('React');
// console.log(courses); // ['HTML', 'CSS', 'JavaScript', 'PostgreSQL', 'Express']
// removeCourse('Vue'); // 'Course with this name was not found'

// updateCourse('Express', 'NestJS');
// console.log(courses); // ['HTML', 'CSS', 'JavaScript', 'PostgreSQL', 'NestJS']

// const courses = ['HTML', 'CSS', 'JavaScript', 'React', 'PostgreSQL'];

//  function addCourse(name) {
//    if (courses.includes(name)) {
//    console.log(' You already have this course');
//    } else {
//     courses.push(name);
//    }
// }
//  addCourse(`ewe`);
//  addCourse(`CSS`);
//  addCourse('Express');
//  console.log(courses);

// function removeCourse(name)  {
//     if (!courses.includes(name)) {
//         console.log('Course with this name was not found');
//     }
// const index = courses.indexOf(name) ;
//     courses.splice(index, 1)
//  }
    

// removeCourse(`HTML`);
// removeCourse(`dgdgd`)
// console.log(courses);

// function updateCourse(oldName, newName) {
//     const newIndex = courses.indexOf(oldName);
//     courses.splice(newIndex, 1, newName);
    
// };

// updateCourse('Express', 'NestJS');
// console.log(courses);

// class Car {
//     constructor({brand, model, price} = {}) {
//         this.brand = brand;
//         this._model = model;
//         this._price = price;
//     }
//     get model() {
//         return this._model;
//     }
//     set model(newModel) {
//         this._model= newModel;
//     }
//     get price() {
//         return this._price;
//     }
//     set price(newPrice) {
//         this._price = newPrice;
//     }
// }
// const myCar = new Car ({
//     brand: `Audi`,
//     model: `Q3`,
//     price: 35000,
// });

// const myCar1 = new Car ({
//     brand: `BMW`,
//     model: `X6`,
//     price: 50000,
// });

// const myCar2 = new Car (
 
// );

// console.log(myCar);
// console.log(myCar1);
// console.log(myCar2);
// console.log(Object.getPrototypeOf(myCar));
// myCar.model = `Volvo`
// console.log(myCar);
// myCar1.price = 500000000;
// console.log(myCar1);



// class Hero extends Car {

// constructor(brand, model, price, config) {
//     super(brand, model, price);

// this.config = config;
// }
// }
// const mango = new Hero(brand= `Mango`, `Poly`, 10000, 11111); 
// console.log(mango);

// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// class Rectangle {
//     constructor(height, width){
//         this.name = "Rectangle";
//         this.height = height;
//         this.width = width;
//     }
//     sayName() {
//         console.log("Hi, I am a", this.name + ".");
//     }
//     get area() {
//         return this.height * this.width;
//     }
//     set area(value){
//         this.area = value;
//     }
// }

// class Square extends Rectangle {
//     constructor(length) {
//         super(length, length);
//         this.name = "Square"
//     }
// }

// const square = new Square(10);
// console.log(square);
// square.sayName();
// console.log(square.area);

// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

// –ù–∞–ø–∏—à–∏—Ç–µ –∫–ª–∞—Å Toggle, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–π–º–∞–µ—Ç –æ–±'—î–∫—Ç –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å {isOpen: boolean}–∏ –æ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –æ–¥–Ω—É –≤–ª–∞—Å—Ç—å on- —Å—Ç–∞–Ω –≤–∫–ª/–≤–∏–∫–ª (true/false). –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –∑–Ω–∞—á–µ–Ω–Ω—è –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ on –ø–æ–≤–∏–Ω–Ω–æ –±—É—Ç–∏ false.

// class Toggle {
//     constructor(settings) {
//         this.on = settings?.isOpen || false;
//     }
//     toggle() {
//             this.on = !this.on; // this.on = !this.on -> this.on = !true -> this.on = false
//           }
// }


// const firstToggle = new Toggle({ isOpen: true });
// console.group('firstToggle');
// console.log(firstToggle.on);
// firstToggle.toggle();
// console.log(firstToggle.on);
// console.groupEnd('firstToggle');

// const secondToggle = new Toggle();
// console.group('secondToggle');
// console.log(secondToggle.on);
// secondToggle.toggle();
// console.log(secondToggle.on);
// console.groupEnd('secondToggle');
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

// –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å User —è–∫–∏–π c—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç —ñ–∑ –≤–ª–∞—Å—Ç–∏–≤—è–º login —Ç–∞ email. –û–≥–æ–ª–æ—Å–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–∏ #login—Ç–∞ #email, –¥–æ—Å—Ç—É–ø –¥–æ —è–∫–∏—Ö –∑—Ä–æ–±–∏ —á–µ—Ä–µ–∑ –≥–µ—Ç–µ—Ä —Ç–∞ —Å–µ—Ç–µ—Ä login—Ç–∞ email.

// class User {
//     #login;
//     #email;
//     constructor({login, email}) {
//         this.#login = login;
//         this.#email = email;
//     }

//     get login(){
//         return this.#login
//     }
//     set login(newLogin){
//        this.#login = newLogin;
//     }

//     get email(){
//         return this.#email
//     }
//     set email(newEmail){
//        this.#email = newEmail;
//     }
    
// }

// const mango = new User({
//   login: 'Mango',
//   email: 'mango@dog.woof',
// });

// console.log(mango.login); // Mango
// mango.login = 'Mangodoge';
// console.log(mango.login); // Mangodoge

// const poly = new User({
//   login: 'Poly',
//   email: 'poly@mail.com',
// });

// console.log(poly.login); // Poly
// poly.login = 'Polycutie';
// console.log(poly.login); // Polycutie
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

// –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å Blogger –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±'—î–∫—Ç–∞ –±–ª–æ–≥–µ—Ä–∞ —Å –Ω–∞—Å—Ç—É–ø–Ω–∏–º–∏ –≤–ª–∞—Å—Ç—è–º–∏:

// email- –ø–æ—à—Ç–∞, —Ä—è–¥–æ–∫
// age- –≤–µ–∫, —á–∏—Å–ª–æ
// numberOfPosts- –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤, —á–∏—Å–ª–æ
// topics- –º–∞—Å–∏–≤ —Ç–µ–º –Ω–∞ —è–∫–∏—Ö —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑—É—î –±–ª–æ–≥–µ—Ä
// –ö–ª–∞—Å –æ–¥–Ω–æ–π —á–µ–∫–∞—î –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä - –æ–±'—î–∫—Ç –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –∑–º–µ–Ω–Ω–∏–º–∏ —Å–∏–ª–æ–≤—ã–º–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞–º–∏.

// –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –º–µ—Ç–æ–¥ getInfo(), —Å–∞–º—ã–π –±—ã—Å—Ç—Ä—ã–π, –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π —Ä—è–¥: User ${–ø–æ—à—Ç–∞} is ${–≤—ñ–∫} years old and has ${–∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—ñ–≤} posts.

// –î–æ–±–∞–≤–æ—á–Ω—ã–π –º–µ—Ç–æ–¥ updatePostCount(value), –∫–æ—Ç–æ—Ä—ã–π –∏–º–µ–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä, value–ø—Ä–∏–±–∞–≤–ª—è–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å –≤—Ä—É—á–Ω—É—é.

// class Blogger {
//     constructor({name, age, numberOfPosts, topics}) {
//         this.name = name;
//         this.age = age;
//         this.numberOfPosts = numberOfPosts;
//         this.topics = topics;
//     }

//     getInfo() {
//         return `User ${this.name} is ${this.age} years old and has ${this.numberOfPosts} posts.`;
//     }

//     updatePostCount(value) {
//         this.numberOfPosts += value;
       
//     }
// }

// const mango = new Blogger({
//   name: 'mango@mail.com',
//   age: 24,
//   numberOfPosts: 20,
//   topics: ['tech', 'cooking'],
// });
// console.log(mango.getInfo()); // User mango@mail.com is 24 years old and has 20 posts
// mango.updatePostCount(5);
// console.log(mango.getInfo()); // User mango@mail.com is 24 years old and has 25 posts

// const poly = new Blogger({
//   name: 'poly@mail.com',
//   age: 19,
//   numberOfPosts: 17,
//   topics: ['sports', 'gaming', 'health'],
// });
// console.log(poly.getInfo()); // User poly@mail.com is 19 years old and has 17 posts
// poly.updatePostCount(4);
// console.log(poly.getInfo()); // User poly@mail.com is 19 years old and has 21 posts

// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// –ü–µ—Ä–µ–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –≤–∏–≥–ª—è–¥—É border-left-width –¥–æ borderLeftWidth
// –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é camelize(str, callback), —è–∫–∞ –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î —Ä—è–¥–∫–∏ ¬´my-short-string¬ª –Ω–∞ ¬´myShortString¬ª.
//
// –¢–æ–±—Ç–æ –¥–µ—Ñ—ñ—Å–∏ –≤—ñ–¥–¥–∞–ª—è—é—Ç—å—Å—è, –∞ –≤—Å—ñ —Å–ª–æ–≤–∞ –ø—ñ—Å–ª—è –Ω–∏—Ö –æ—Ç—Ä–∏–º—É—é—Ç—å –≤–µ–ª–∏–∫—É –±—É–∫–≤—É.
//
// camelize("background-color") == 'backgroundColor';
// camelize("list-style-image") == 'listStyleImage';
// camelize("-webkit-transition") == 'WebkitTransition';

// function camelize(str, callback) {
//     return str
//       .split("-")
//       .map((item, index) => (index === 0 ? item : callback(item)))
//       .join("");
//   }
//   console.log(camelize("background-color", toUpperFirstLetter));
//   console.log(camelize("list-style-image", toUpperFirstLetter));
//   console.log(camelize("-webkit-transition", toUpperFirstLetter));
  
//   function toUpperFirstLetter(str) {
//     return str[0].toUpperCase() + `${str.slice(1)}`;
//   }
  

// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

// –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é each(array, callback), —è–∫–∞
// –ø–µ—Ä—à–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –ø—Ä–∏–π–º–∞—î –º–∞—Å–∏–≤, –∞ –¥—Ä—É–≥–∏–º - —Ñ—É–Ω–∫—Ü—ñ—é,
// —è–∫–∞ –∑–∞—Å—Ç–æ—Å–æ–≤—É—î—Ç—å—Å—è –¥–æ –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É.
// –§—É–Ω–∫—Ü—ñ—è each –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤, –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏
// —è–∫–æ–≥–æ –±—É–¥—É—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –≤–∏–∫–ª–∏–∫—É callback
// callback —Ñ—É–Ω–∫—Ü—ñ—ó –ø–æ–≤–∏–Ω–Ω–∞ –º–Ω–æ–∂–∏—Ç–∏ –µ–ª–µ–º–µ–Ω—Ç–∏ –Ω–∞ 2


// function each(array, callback) {
//     const resultArr = [];
//     for (let i = 0; i < array.length; i++) {
//       const newItem = callback(array[i]);
//       resultArr.push(newItem);
//     }
//     return resultArr;
//   }
  
//   console.log(each([1,2,3], (num) => num*2));
//   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// –ù–∞–ø–∏—à—ñ—Ç—å –¥–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
  // makeProduct(–Ω–∞–∑–≤–∞, —Ü—ñ–Ω–∞, callback) - –ø—Ä–∏–π–º–∞—î
  // —ñ–º`—è —ñ —Ü—ñ–Ω—É —Ç–æ–≤–∞—Ä—É, –∞ —Ç–∞–∫–æ–∂ —Ñ—É–Ω–∫—Ü—ñ—é callback.
  // –§—É–Ω–∫—Ü—ñ—è —Å—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç —Ç–æ–≤–∞—Ä—É, –¥–æ–¥–∞—î –π–æ–º—É —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π
  // —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —É –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ id —ñ –≤–∏–∫–ª–∏–∫–∞—î –∑–≤–æ—Ä–æ—Ç–Ω–∏–π –≤–∏–∫–ª–∏–∫
  // –ø–µ—Ä–µ–¥–∞—é—á–∏ –π–æ–º—É —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –æ–±‚Äô—î–∫—Ç.
  // showProduct(product) - callback –ø—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç
  // –ø—Ä–æ–¥—É–∫—Ç–∞ —ñ –≤–∏–≤–æ–¥–∏—Ç—å –π–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å
//   function makeProduct(name, price, callback) {
//      const product = {
//        name,
//        price,
//        id: Date.now(),      
//       }
//    callback(product)
//   }
// function showProduct(product){
//     console.log(product);
  
// }
// makeProduct(`mango`, 500, showProduct);

// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

  // –í–∏–∫–æ–Ω–∞–π —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ makeDish —Ç–∞–∫, —â–æ–± –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –±—É–ª–æ
// —â–æ—Ä–∞–∑—É –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏ —ñ–º'—è —à–µ—Ñ–∞.
// –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é makeShef(shefName), —è–∫–∞ –ø–æ–≤–µ—Ä—Ç–∞—î —Ñ—É–Ω–∫—Ü—ñ—é
// makeDish(dish), —â–æ –ø–∞–º'—è—Ç–∞—î —ñ–º'—è —à–µ—Ñ–∞ –ø—Ä–∏ —ó—ó –≤–∏–∫–ª–∏–∫—É

// const makeDish = function (shefName, dish) {
//   console.log(`${shefName} is cooking ${dish}`);
// };

// makeDish("Mango", "apple pie");
// makeDish("Poly", "muffins");

// function makeShef (shefName){
//     return function makeDish(dish) {
//         console.log(`${shefName} is cooking ${dish}`);
//     }
// }
// const mango = makeShef("Mango");
// mango(`apple pie`);
// mango(`fish`);

// const polly = makeShef("Polly");
// polly(`cocke`);

// makeShef(`Alex`)(`meet`);

// –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é makeCounter, —è–∫–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –æ–±'—î–∫—Ç —ñ–∑ —Ç–∞–∫–∏–º–∏ –º–µ—Ç–æ–¥–∞–º–∏
// increment - –∑–±—ñ–ª—å—à—É—î counter –Ω–∞ 1
// decrement - –∑–º–µ–Ω—à—É—î counter –Ω–∞ 1
// getValue - –ø–æ–≤–µ—Ä—Ç–∞—î –∑–Ω–∞—á–µ–Ω–Ω—è counter

// function makeCounter() {
//     let counter = 2;
  
//     return {
//       increment: () => (counter += 3),
  
//       decrement: () => (counter -= 1),
  
//       getValue: () => counter,
//     };
//   }
  
//   const counter = makeCounter();
  
//   counter.increment();
//   counter.increment();
//   counter.increment();
  
//   counter.decrement();
//   counter.decrement();
  
//   console.log(counter.getValue());
  
//–ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –∑–Ω–∏–∂–∫–∏. –§—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä—Ç–∞—î
//–Ü–Ω—à—É —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –ø—Ä–∏–π–º–∞—î —Å—É–º—É –ø–æ–∫—É–ø–∫–∏
//—ñ –ø–æ–≤–µ—Ä—Ç–∞—î —Ñ—ñ–Ω–∞–ª—å–Ω—É —Å—É–º—É —ñ–∑ –∑–±–µ—Ä–µ–∂–µ–Ω–æ—é –∑–Ω–∏–∂–∫–æ—é.

// function saveDiscount(discount) {
//     return function makeDiscount(sum) {
//       return sum - sum * (discount / 100);
//     }
//   }
  
//   const premium = saveDiscount(50);
//   const season = saveDiscount(30);
//   const current = saveDiscount(10);
  
//   console.log(premium(1500));
//   console.log(season(900));
//   console.log(current(650));


//–ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é savePassword(password), —è–∫–∞ –ø—Ä–∏–π–º–∞—î
//–ø–∞—Ä–æ–ª—å —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –≤–Ω—É—Ç—Ä—ñ—à–Ω—é —Ñ—É–Ω–∫—Ü—ñ—é, —â–æ –ø—Ä–∏–π–º–∞—î
//—Ä—è–¥–æ–∫ —ñ –ø–æ–≤–µ—Ä—Ç–∞—î true, —è–∫—â–æ —Ä—è–¥–æ–∫ –∑–±—ñ–≥–∞—î—Ç—å—Å—è —ñ–∑ –∑–±–µ—Ä–µ–∂–µ–Ω–∏–º
//–ø–∞—Ä–æ–ª–µ–º —ñ false - —è–∫—â–æ –Ω–µ –∑–±—ñ–≥–∞—î—Ç—å—Å—è

// function savePassword(password) {
//     return function (userPassword) {
//       return password === userPassword;
//     }
//   }
  
//   const checkPassword = savePassword("mypass");
  
//   console.log(checkPassword);
  
//   console.log(checkPassword("notmypass"));
  
//   console.log(checkPassword("mypass"));
  
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// / –í–∏–ø—Ä–∞–≤—Ç–µ –ø–æ–º–∏–ª–∫–∏, —â–æ–± –∫–æ–¥ –ø—Ä–∞—Ü—é–≤–∞–≤

// const jeans = {
//     price: 500,
//     showPrice() {
//         console.log(this.price);
//     },};

//     jeans.showPrice();

//     const phone = {
//         price: 1000,
//     };

//     phone.showPrice = jeans.showPrice;
//     phone.showPrice();
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

// –í–∏–ø—Ä–∞–≤—Ç–µ –ø–æ–º–∏–ª–∫–∏, —â–æ–± –∫–æ–¥ –ø—Ä–∞—Ü—é–≤–∞–≤

// const product = {
//     price: 5000,
//     showPrice() {
//         console.log(this.price);
//     },};

    
//         function callAction(action) {
//             action();
//         }

//         callAction(product.showPrice.bind(product));
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

// –ó—Ä–æ–±—ñ—Ç—å —Ç–∞–∫, —â–æ–± –∫–æ–¥ –ø—Ä–∞—Ü—é–≤–∞–≤
// const user = {
//     name: 'Jhon',
//     showName() {
//         console.log(this.name);
//     }}
    
//     setTimeout(user.showName.bind(user), 1000)

    // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

    // –ü–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é showPrice —Ç–∞–∫, —â–æ–± this –≤–∫–∞–∑—É–≤–∞–≤ –Ω–∞ –æ–±'—î–∫—Ç 
    
    // function showPrice() {
    //     console.log(this.price);
    // }
    // const laptop = {
    //     price: 1500
    // }
    // showPrice.call(laptop);
    // showPrice.apply(laptop)
    // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

   // –î–∞–Ω–∏–π –æ–±'—î–∫—Ç counter. –ù–∞–ø–∏—à—ñ—Ç—å –¥–æ –Ω—å–æ–≥–æ getter —Ç–∞ setter
   
//    const counter = {
//     _count: 3,

//     get count() {
//      return this._count;
//     },
//     set count(num) {
//     return this._count = num
//     }
// }

// console.log(counter._count);
// counter._count= 5
// console.log(counter._count);
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

// –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å Client —è–∫–∏–π —Å—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç//–∑ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏ login email//–û–≥–æ–ª–æ—Å–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ #login #email,//–¥–æ—Å—Ç—É–ø –¥–æ —è–∫–∏—Ö –∑—Ä–æ–±–∏ —á–µ—Ä–µ–∑ –≥–µ—Ç—Ç–µ—Ä —Ç–∞ —Å–µ—Ç—Ç–µ—Ä login email

// class Client {
//     #login;
//     #email;
//     constructor(login,email){
// this.#login = login;
// this.#email = email;
//     }

//     get showLogin() {
// return this.#login
//     }

//     set showLogin(value) {
//          this.#login = value;
//             }

// }
// const user = new Client(`mailsss`, `fgfhfgfh`)
// console.log(user.login);
// user.login = `hello`;
// console.log(user.login);
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

//–°—Ç–≤–æ—Ä—ñ—Ç—å –æ–±'—î–∫—Ç calculator —ñ–∑ —Ç–∞–∫–∏–º–∏ –º–µ—Ç–æ–¥–∞–º–∏//read() - –∑—á–∏—Ç—É—î —á–µ—Ä–µ–∑ promp —á–∏–ª–æ, –æ–ø–µ—Ä–∞—Ç–æ—Ä —Ç–∞ –Ω–∞—É—Å—Ç–ø–Ω–µ —á–∏—Å–ª–æ
//—è–∫ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –æ–±'—î–∫—Ç–∞
//sum() –ø–æ–≤–µ—Ä—Ç–∞—î —Å—É–º—É –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å
//min() –ø–æ–≤–µ—Ä—Ç–∞—î —Ä—ñ–∑–Ω–∏—Ü—é –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å
//mult() –ø–µ—Ä–µ–º–Ω–æ–∂—É—î –∑–±–µ—Ä–µ–∂–µ–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç
//div() –¥—ñ–ª–∏—Ç—å –∑–±–µ—Ä–µ–∂–µ–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç
// const calculator = {// read() {},// sum() {},// min() {},// mult() {},// div() {},
// parseString(originalString) {// const [firstOperand, operator, secondOperand ] = originalString.replaceAll(" ", "").split(/(\D)/);//// return {// firstOperand,// secondOperand,// operator,// };// }// };

//    const calculator = {
//         read() {
//          const input = prompt(`Enter number, operator, number`);
//          const parseInput = this.parseString(input);
//          console.log(parseInput);
//          console.log(this.calculate(parseInput));
//         },
//           sum(a, b) {
//             return Number(a) + Number(b);
//           },
//           min(a, b) {
//             return Number(a) - Number(b);
//           },
//           mult(a, b) {
//             return Number(a) * Number(b);
//           },
//           div(a, b) {
//             return Number(a) / Number(b);
//           },
//           parseString(originalString) {
//             const [firstOperand, operator, secondOperand] = originalString.replaceAll(" ", "").split(/(\D)/);

//             return {
//                 firstOperand,
//                 secondOperand,
//                 operator,
//             };
//         },
//             calculate(parsetInput) {
//                 const { firstOperand, operator, secondOperand } = parsetInput;
//                 switch (operator) {
//                     case "+":
//                     return this.sum(firstOperand, secondOperand);

//                     case"-":
//                     return this.min(firstOperand, secondOperand);

//                     case"*":
//                     return this.mult(firstOperand, secondOperand);

//                     case"/":
//                     return this.div(firstOperand, secondOperand);

//                 }
//             },
//         };
//         calculator.read();
        
    // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   

  